{"version":3,"sources":["components/FilterBtn.js","components/TodoApp.js","components/TodoForm.js","components/Todo.js","components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["FilterBtn","filter","setFilter","activefilter","onClick","className","TodoApp","children","style","fontSize","TodoForm","dispatch","ipRef","useRef","type","ref","placeholder","onKeyUp","e","preventDefault","current","value","code","name","Todo","todo","useState","show","setShow","createRef","EditUi","marginRight","id","aria-hidden","completed","Todos","memo","todos","map","reducer","state","action","Date","now","saving","indexofRemovedItem","findIndex","st","slice","App","useReducer","FILTER_MAP","All","Active","Completed","FilterBtns","Object","keys","filteredTodos","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3de5a0b2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst FilterBtn = ({ filter, setFilter, activefilter }) => {\n  return (\n    <button\n      onClick={() => setFilter(filter)}\n      className={filter === activefilter ? \"getFocus\" : \"\"}\n    >\n      {filter}\n    </button>\n  );\n};\n\nexport default FilterBtn;\n","import React from \"react\";\n\nconst TodoApp = ({ children }) => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"ui center aligned disabled header\">\n        todos <em style={{ fontSize: 19 }}>(by useReduer Hook)</em>\n      </h1>\n      {children}\n    </div>\n  );\n};\n\nexport default TodoApp;\n","import React, { useRef } from \"react\";\n\nconst TodoForm = ({ dispatch }) => {\n  const ipRef = useRef();\n  return (\n    <div>\n      <div className=\"ui input huge fullWidth\">\n        <input\n          type=\"text\"\n          ref={ipRef}\n          placeholder=\"add your todo task...\"\n          onKeyUp={(e) => {\n            e.preventDefault();\n            if (ipRef.current.value === \"\") return;\n            if (e.code === \"Enter\") {\n              dispatch({ type: \"ADD_TODO\", name: ipRef.current.value });\n              ipRef.current.value = \"\";\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport { TodoForm };\n","import React, { createRef, useState } from \"react\";\n\nconst Todo = ({ todo, dispatch }) => {\n  const [show, setShow] = useState(false);\n  const ipRef = createRef();\n\n  const EditUi = ({ todo }) => {\n    return (\n      <div className=\"updateForm\">\n        <div className=\"ui input small\" style={{ marginRight: 4 }}>\n          <input type=\"text\" placeholder={todo.name} ref={ipRef} />\n        </div>\n\n        <button\n          className=\"ui black button\"\n          onClick={() => {\n            dispatch({\n              type: \"UPDATE_TODO\",\n              id: todo.id,\n              name: ipRef.current.value,\n            });\n            setShow(false);\n          }}\n        >\n          update\n        </button>\n        <button onClick={() => setShow(false)} className=\"ui red button\">\n          cancel\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      {show ? <EditUi todo={todo} /> : \"\"}\n\n      <div className=\"ui vertical steps fullWidth\">\n        <div className=\"completed step\">\n          <div>\n            <i\n              aria-hidden=\"true\"\n              className={\n                todo.completed\n                  ? \"large check circle icon\"\n                  : \"large check circle outline icon\"\n              }\n              onClick={(e) =>\n                dispatch({\n                  type: \"COMPLETE_TODO\",\n                  id: todo.id,\n                  completed: !todo.completed,\n                })\n              }\n            ></i>\n            <label>{todo.name}</label>\n          </div>\n          &nbsp;&nbsp;\n          <div className=\"forcemovetoRight\">\n            <i\n              aria-hidden=\"true\"\n              className=\"large black pencil icon\"\n              onClick={() => setShow(true)}\n            ></i>\n            <i\n              aria-hidden=\"true\"\n              className=\"large times circle icon red\"\n              onClick={() => dispatch({ type: \"DELETE_TODO\", id: todo.id })}\n            ></i>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Todo };\n","import React, { memo } from \"react\";\nimport { Todo } from \"./Todo\";\n\nconst Todos = memo(({ todos, dispatch }) =>\n  todos.map((todo) => <Todo key={todo.id} todo={todo} dispatch={dispatch} />)\n);\n\nexport { Todos };\n","import { useReducer, useState, Fragment } from \"react\";\nimport FilterBtn from \"./components/FilterBtn\";\nimport TodoApp from \"./components/TodoApp\";\nimport { TodoForm } from \"./components/TodoForm\";\nimport { Todos } from \"./components/Todos\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [\n        ...state,\n        {\n          id: Date.now(),\n          saving: true,\n          name: action.name,\n          completed: false,\n        },\n      ];\n    case \"DELETE_TODO\":\n      let indexofRemovedItem = state.findIndex((st) => st.id === action.id);\n      if (indexofRemovedItem === -1) {\n        return state;\n      }\n      return [\n        ...state.slice(0, indexofRemovedItem),\n        ...state.slice(indexofRemovedItem + 1),\n      ];\n    case \"UPDATE_TODO\":\n      return state.map((st) =>\n        st.id === action.id ? { ...st, name: action.name } : st\n      );\n    case \"COMPLETE_TODO\":\n      return state.map((st) =>\n        st.id === action.id ? { ...st, completed: action.completed } : st\n      );\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, []);\n  const [activefilter, setFilter] = useState(\"All\");\n\n  const FILTER_MAP = {\n    All: () => true,\n    Active: (todo) => !todo.completed,\n    Completed: (todo) => todo.completed,\n  };\n\n  const FilterBtns = () =>\n    Object.keys(FILTER_MAP).map((filter) => (\n      <FilterBtn\n        key={filter}\n        filter={filter}\n        setFilter={setFilter}\n        activefilter={activefilter}\n      />\n    ));\n  const filteredTodos = state.filter(FILTER_MAP[activefilter]);\n  const todoNoun = () => (filteredTodos.length > 1 ? \"tasks\" : \"task\");\n\n  return (\n    <Fragment>\n      <TodoApp>\n        <TodoForm dispatch={dispatch} />\n        {state.length > 0 ? <FilterBtns /> : \"\"}\n\n        {filteredTodos.length > 0 ? (\n          <div className=\"ui tag labels\">\n            <em className=\"ui label\">\n              {`${activefilter} ${filteredTodos.length} ${todoNoun()}`}\n            </em>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        <Todos todos={filteredTodos} dispatch={dispatch} />\n      </TodoApp>\n    </Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}